
/** 
 *  SIMPLE_STORE HUFF EXERCISE
 *
 *  One of the storage locations available to devs when writing smart contracts is Storage. Its persistent and expensive
 *  
 *  The task is to write within the `MAIN` macro below, 2 functions...
 *      - One named `store()` that takes one function argument and stores it in storage slot 0,
 *      - the second named `read()` that simply returns what is stored at storage slot 0.
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

#define function store(uint256) payable returns()
#define function read() payable returns(uint256)

#define constant FREE_STORAGE = FREE_STORAGE_POINTER()

#define macro store() = takes(0) returns(0) {
    0x04
    calldataload
    0x00
    sstore
}

#define macro read() = takes(0) returns(0) {
    0x00
    sload
    0x00            // [0, FREE_STORAGE(data)]
    mstore          // []

    // return 32 bytes of memory starting at offset 0
    0x20            // [32]
    0x00            // [0, 32]
    return          // []
}

#define macro MAIN() = takes(0) returns(0) {
    push0                   // [0]
    calldataload            // [calldata]
    0xe0                    // [224, calldata]
    shr                     // [function selector]
    dup1                    // [function selector, function selector]
    __FUNC_SIG(store)       // [function selector(store), function selector, function selector]
    eq                      // [function selector(store)==function selector, function selector]
    store                   // [dispatch, function selector(store)==function selector, function selector]
    jumpi                   // jump if (function selector(store)==function selector)]
    __FUNC_SIG(read)        // [function selector(read), function selector]
    eq                      // [function selector(read)==function selector]
    read                    // [dispatch, function selector(read)==function selector]
    jumpi                   // jump if (function selector(read)==function selector)

    // revert if !(function selector(add1)==function selector)
    0x00 
    0x00 
    revert

    // dispatch
    store:
        store()
    read:
        read()
    
}